#include <stdio.h>
#include <stdlib.h>

#define MAX_OBJETOS 10 // Máximo número de objetos para el ejemplo más grande

void resolverMochila(int pesos[], int valores[], int n, int capacidad) {
    int maxValor = 0;
    int mejorCombinacion = 0;
    int combinaciones = (1 << n);

    printf("\nTabla de combinaciones probadas:\n");
    printf("--------------------------------------------------\n");
    printf("| Combinacion | Peso Total | Valor Total |\n");
    printf("--------------------------------------------------\n");

    for (int i = 0; i < combinaciones; i++) {
        int pesoActual = 0;
        int valorActual = 0;

        // Calcular peso y valor para la combinación actual
        for (int j = 0; j < n; j++) {
            if (i & (1 << j)) {
                pesoActual += pesos[j];
                valorActual += valores[j];
            }
        }

        // Mostrar solo el peso y el valor de cada combinación si hay más de 5 objetos
        if (n > 5) {
            printf("|     %2d      |     %4d     |     %5d    |\n", i, pesoActual, valorActual);
        } else {
            printf("|     %2d      |     %4d     |     %5d    |\n", i, pesoActual, valorActual);
            printf("--------------------------------------------------\n");
        }

        // Actualizar la mejor combinación si es válida y tiene un valor mayor
        if (pesoActual <= capacidad && valorActual > maxValor) {
            maxValor = valorActual;
            mejorCombinacion = i;
        }
    }

    printf("\nMejor combinacion encontrada:\n");
    for (int j = 0; j < n; j++) {
        if (mejorCombinacion & (1 << j)) {
            printf("Objeto %d (Peso: %d, Valor: %d)\n", j + 1, pesos[j], valores[j]);
        }
    }
    printf("Valor maximo: %d\n", maxValor);
}

int main() {
    int opcion, eleccion;

    // Datos de los ejemplos
    int pesos1[] = {6, 5, 4};
    int valores1[] = {8, 5, 6};
    int n1 = 3, capacidad1 = 12;

    int pesos2[] = {10, 20, 30, 40, 50};
    int valores2[] = {20, 30, 66, 40, 64};
    int n2 = 5, capacidad2 = 100;

    int pesos3[] = {12, 2, 1, 4, 1};
    int valores3[] = {4, 2, 1, 10, 2};
    int n3 = 5, capacidad3 = 15;

    int pesos4[] = {1, 2, 5, 6, 7};
    int valores4[] = {1, 6, 18, 22, 28};
    int n4 = 5, capacidad4 = 11;

    int pesos5[] = {7, 3, 2, 5};
    int valores5[] = {25, 10, 15, 5};
    int n5 = 4, capacidad5 = 10;

    int pesos6[] = {8, 10, 12, 3, 5, 7, 6, 2, 1, 4};
    int valores6[] = {14, 10, 9, 11, 8, 4, 8, 6, 3, 7};
    int n6 = 10, capacidad6 = 40;

    do {
        printf("\nSeleccione una opción:\n");
        printf("1. Elegir valores predeterminados\n");
        printf("2. Ingresar valores del usuario\n");
        printf("3. Salir\n");
        scanf("%d", &eleccion);

        switch (eleccion) {
            case 1:
                printf("\nSeleccione el ejemplo a resolver:\n");
                printf("1. Ejemplo 1 (n = %d, Capacidad = %d)\n", n1, capacidad1);
                printf("2. Ejemplo 2 (n = %d, Capacidad = %d)\n", n2, capacidad2);
                printf("3. Ejemplo 3 (n = %d, Capacidad = %d)\n", n3, capacidad3);
                printf("4. Ejemplo 4 (n = %d, Capacidad = %d)\n", n4, capacidad4);
                printf("5. Ejemplo 5 (n = %d, Capacidad = %d)\n", n5, capacidad5);
                printf("6. Ejemplo 6 (n = %d, Capacidad = %d)\n", n6, capacidad6);
                scanf("%d", &opcion);

                switch (opcion) {
                    case 1:
                        resolverMochila(pesos1, valores1, n1, capacidad1);
                        break;
                    case 2:
                        resolverMochila(pesos2, valores2, n2, capacidad2);
                        break;
                    case 3:
                        resolverMochila(pesos3, valores3, n3, capacidad3);
                        break;
                    case 4:
                        resolverMochila(pesos4, valores4, n4, capacidad4);
                        break;
                    case 5:
                        resolverMochila(pesos5, valores5, n5, capacidad5);
                        break;
                    case 6:
                        resolverMochila(pesos6, valores6, n6, capacidad6);
                        break;
                    default:
                        printf("Opción inválida. Intente de nuevo.\n");
                }
                break;

            case 2:
                printf("Ingrese el número de objetos (máximo %d): ", MAX_OBJETOS);
                int pesos[MAX_OBJETOS], valores[MAX_OBJETOS], n, capacidad;
                scanf("%d", &n);

                for (int i = 0; i < n; i++) {
                    printf("Ingrese el peso del objeto %d: ", i + 1);
                    scanf("%d", &pesos[i]);
                    printf("Ingrese el valor del objeto %d: ", i + 1);
                    scanf("%d", &valores[i]);
                }

                printf("Ingrese la capacidad máxima de la mochila: ");
                scanf("%d", &capacidad);

                resolverMochila(pesos, valores, n, capacidad);
                break;

            case 3:
                printf("Saliendo...\n");
                break;

            default:
                printf("Opción inválida. Intente de nuevo.\n");
        }

        printf("\nPresione Enter para continuar...");
        while (getchar() != '\n');
        getchar();

    } while (eleccion != 3);

    return 0;
}
